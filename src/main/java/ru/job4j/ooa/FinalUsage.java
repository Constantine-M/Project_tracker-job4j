package ru.job4j.ooa;

/**
 * Применять модификатор final можно и для классов.
 * В данном случае будет обозначать, что мы не сможем создать наследников этого класса.
 * Из-за того, что класс объявлен как final, можно в какой-то степени сказать, что и все его методы
 * тоже становятся final, поэтому вообще использовать наследование в данном случае бессмысленно.
 */
public final class FinalUsage {

    /**
     * Если нам необходимо, чтобы после инициализации переменной никто бы ее не смог изменить,
     * при объявлении просто нужно добавить ключевое слово "final".
     * Благодаря ключевому слову "final", мы понимаем, что значение теперь изменить нельзя.
     * Это означает что значение будет постоянным, в математике такие числа называются константами.
     * В языке Java константы принято писать заглавными буквами, если имя константы составное -
     * каждое слово друг от друга отделяется нижним подчеркиванием.
     * Если мы объявляем константу на уровне класса, то обычно пишут вот так DEFAULT_STORE_CAPACITY:
     */
    private static final int DEFAULT_STORE_CAPACITY = 100;
    /**Если вынести переменную в поле объекта.*/
    private static final String NAME = "Consta";

    /**
     * Что же означает использование методов использование ключевого слова final?
     * Все очень просто - при наследовании данный метод нельзя будет переопределить.
     */
    public final void printMark() {
        System.out.println("Выводит марку автомобиля.");
    }

    public static void main(String[] args) {
        /**final String NAME = "Consta";*/
        System.out.println(NAME);
    }
}
